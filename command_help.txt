pip freeze > requirements.txt # 自动生成/更新requirements文件
pip install -r requirements.txt # 自动安装依赖库
pip install xlwings==0.32.2 # 安装指定版本的第三方库

git add . # 将工作区的新增/修改添加到缓存区
git commit -m "" # 将缓存区记录的新增/修改提交到本地仓库
git push # 将本地仓库最新代码推送到远程仓库

"""
如果本地是个人仓，push之前先从远程master仓库pull拉取最新代码。
这样即使出现代码冲突，也可以在pycharm客户端通过工具解决冲突，然后再push到个人远程仓。
这个时候还需要在远程服务器新建合并请求，审批合入。
"""

git stash # 将工作区的新增/修改添加到暂存区，可以多次反复添加
git stash save "" # 相比上一步，多加了注释功能，方便识别1。
git stash list # 查看暂存区的历史记录列表
git stash clear # 清空暂存区的所有内容，注意git add .的记录也会清除哦
git stash pop # 从暂存区取出最后一次的记录（取出后历史记录就没有这一条了）
git stash apply stash@ # 从暂存区应用某次记录(应用后历史记录还在)

"""
git reset:重置，简单理解，就是穿越时光重返旧年代，重新生活一次。修改代码以后用到git push -f将本地代码
强制推送到远程服务器(普通push命令会报错)。强推以后，一切从现在重新开始，之前的未来没有了（源版本后面提交的版本全部消失）。
git revert：回滚，简单理解，就是蝴蝶效应修正自己的过去，在不影响其他人未来的情况下，修复自己错误的人生（源版本后面提交的版本还在）。
git reset 和 git revert命令参考以下教程：
https://blog.csdn.net/qq_43775179/article/details/127572623?ops_request_misc=%257B%2522request%255Fid%2522%253A%25225F7C752B-F30C-4AFB-9E82-0B9C84971E0D%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=5F7C752B-F30C-4AFB-9E82-0B9C84971E0D&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-127572623-null-null.142^v100^pc_search_result_base8&utm_term=git%20reset&spm=1018.2226.3001.4187
"""
